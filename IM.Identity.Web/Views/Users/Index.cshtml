@using GridMvc.Html
@using IM.Identity.BI.Models
@using IM.Identity.Web.Resources
@model IEnumerable<ApplicationUser>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">

    <div class="formLeftHeader">
        <div class="formInnerHeader">
            <h2 class="pageHeaderCaption">Users</h2>
        </div>
    </div>

    <div class="layoutForm">

        <p>
            @Html.ActionLink("Create New", "Create")
        </p>

        @helper RenderActions(ApplicationUser item)
        {
            <a href="@Url.Action("Edit", "Users", new { id = item.Id }, null)"> Edit </a> <span>|</span>
            <a href="@Url.Action("Details", "Users", new { id = item.Id }, null)"> Details </a> <span>|</span>
            <a href="@Url.Action("Delete", "Users", new { id = item.Id }, null)"> Delete </a> <span>|</span>
        }

        @Html.Grid(Model).Columns(columns =>
        {
            columns.Add(item => item.Email).Titled(ViewResource.Email).Sortable(true).Filterable(true);
            columns.Add(item => item.EmailConfirmed).Titled(ViewResource.EmailConfirmed).Sortable(true).Filterable(true);
            columns.Add(item => item.PhoneNumber).Titled(ViewResource.Phone).Sortable(true).Filterable(true);
            columns.Add(item => item.LockoutEnabled).Titled(ViewResource.LockoutEnabled).Sortable(true).Filterable(true);
            columns.Add(item => item.AccessFailedCount).Titled(ViewResource.AccessFailedCount).Sortable(true).Filterable(true);
            columns.Add().Encoded(false).Sanitized(false).RenderValueAs(item => RenderActions(item));
        }).WithPaging(10)

    </div>

</div>